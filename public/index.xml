<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DizzyLand</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on DizzyLand</description>
    <generator>Hugo -- 0.140.2</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Jan 2025 09:09:39 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Locks and Synchronization Mechanisms in Golang&#39;s sync Package</title>
      <link>http://localhost:1313/posts/go-concurrency-locks/</link>
      <pubDate>Thu, 09 Jan 2025 09:09:39 +0800</pubDate>
      <guid>http://localhost:1313/posts/go-concurrency-locks/</guid>
      <description>&lt;p&gt;In Golang&amp;rsquo;s standard library &lt;code&gt;sync&lt;/code&gt;, &lt;code&gt;sync.Mutex&lt;/code&gt; is a basic mutual exclusion lock used to protect shared resources and prevent multiple goroutines from simultaneously accessing or modifying data. The &lt;code&gt;sync&lt;/code&gt; package provides several types of locks and synchronization mechanisms. Here&amp;rsquo;s a comprehensive overview of the main lock types and their differences:&lt;/p&gt;
&lt;h2 id=&#34;1-syncmutex-mutual-exclusion-lock&#34;&gt;1. sync.Mutex (Mutual Exclusion Lock)&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;sync.Mutex&lt;/code&gt; is the most basic lock type used to protect critical sections, ensuring only one goroutine can enter the locked area.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kagi: The Search Engine That Actually Respects Your Brain (and Privacy!)</title>
      <link>http://localhost:1313/posts/kagi/</link>
      <pubDate>Wed, 08 Jan 2025 13:40:24 +0800</pubDate>
      <guid>http://localhost:1313/posts/kagi/</guid>
      <description>&lt;h2 id=&#34;beyond-the-basic-search-why-kagi-is-your-new-best-friend&#34;&gt;Beyond the Basic Search: Why Kagi is Your New Best Friend&lt;/h2&gt;
&lt;p&gt;Hey there, internet explorers! Tired of drowning in ads and sponsored content every time you search for something? Let me introduce you to Kagi - the search engine that treats you like a human, not a walking wallet.&lt;/p&gt;
&lt;h3 id=&#34;-what-makes-kagi-special&#34;&gt;ðŸŽ¯ What Makes Kagi Special?&lt;/h3&gt;
&lt;h4 id=&#34;no-more-ad-maze&#34;&gt;No More Ad Maze&lt;/h4&gt;
&lt;p&gt;Remember the last time you searched for a recipe and had to scroll past three screens of ads? Yeah, Kagi doesn&amp;rsquo;t do that. Zero ads. Nada. Just pure, delicious search results.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ultimate Guide to Chocolatey</title>
      <link>http://localhost:1313/posts/ultimate-guide-to-chocolatey/</link>
      <pubDate>Tue, 07 Jan 2025 10:52:24 +0800</pubDate>
      <guid>http://localhost:1313/posts/ultimate-guide-to-chocolatey/</guid>
      <description>&lt;h1 id=&#34;the-ultimate-guide-to-installing-chocolatey-package-manager-for-windows&#34;&gt;The Ultimate Guide to Installing Chocolatey Package Manager for Windows&lt;/h1&gt;
&lt;h2 id=&#34;what-is-chocolatey&#34;&gt;What is Chocolatey?&lt;/h2&gt;
&lt;p&gt;Chocolatey (choco) is a powerful package manager for Windows that automates software installation, upgrading, and uninstallation. Think of it as the Windows equivalent of &lt;code&gt;apt-get&lt;/code&gt; for Linux or &lt;code&gt;brew&lt;/code&gt; for macOS.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows operating system&lt;/li&gt;
&lt;li&gt;Administrator privileges&lt;/li&gt;
&lt;li&gt;Internet connection&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation-steps&#34;&gt;Installation Steps&lt;/h2&gt;
&lt;h3 id=&#34;step-1-open-powershell-as-administrator&#34;&gt;Step 1: Open PowerShell as Administrator&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Right-click on the Start menu&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Windows PowerShell (Admin)&amp;rdquo; or &amp;ldquo;Windows Terminal (Admin)&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Confirm the UAC prompt if it appears&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;step-2-check-execution-policy&#34;&gt;Step 2: Check Execution Policy&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Get-ExecutionPolicy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the policy isn&amp;rsquo;t set to &lt;code&gt;RemoteSigned&lt;/code&gt; or &lt;code&gt;Unrestricted&lt;/code&gt;, run:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang-sort</title>
      <link>http://localhost:1313/posts/golang-sort/</link>
      <pubDate>Mon, 06 Jan 2025 21:52:24 +0800</pubDate>
      <guid>http://localhost:1313/posts/golang-sort/</guid>
      <description>&lt;p&gt;Looking for efficient ways to sort data in Go? This guide covers everything from basic sorting to advanced techniques!&lt;/p&gt;
&lt;h2 id=&#34;-basic-sorting&#34;&gt;ðŸš€ Basic Sorting&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;sort&lt;/code&gt; package provides fundamental sorting capabilities.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sort&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//sort int
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;s1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Ints&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//sort int reverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Reverse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;IntSlice&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s1&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//sort string
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;s2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bbb&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4&amp;#34;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Strings&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//sort string reverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Reverse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;StringSlice&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s2&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//sort float64
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;float64&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.9&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;82.333&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;99.11&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Float64s&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//sort float64 reverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Reverse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Float64Slice&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-object-sorting&#34;&gt;ðŸŽ¯ Object Sorting&lt;/h2&gt;
&lt;p&gt;How to sort a list of objects by specific fields:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sokit - A Powerful TCP/UDP Testing Tool You Should Know</title>
      <link>http://localhost:1313/posts/sokit/</link>
      <pubDate>Thu, 21 Mar 2024 11:09:39 +0800</pubDate>
      <guid>http://localhost:1313/posts/sokit/</guid>
      <description>&lt;p&gt;Looking for an easy-to-use TCP/UDP testing tool? Sokit is a lightweight but powerful solution that helps you test network communications with ease.&lt;/p&gt;
&lt;h2 id=&#34;-key-features&#34;&gt;âœ¨ Key Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TCP/UDP Server simulation (supports both string and hex formats)&lt;/li&gt;
&lt;li&gt;TCP/UDP Client simulation (supports both string and hex formats)&lt;/li&gt;
&lt;li&gt;Data forwarding/proxy capabilities&lt;/li&gt;
&lt;li&gt;Cross-platform support (Windows &amp;amp; Linux)&lt;/li&gt;
&lt;li&gt;Clean and intuitive UI&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-quick-links&#34;&gt;ðŸ”— Quick Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sinpolib/sokit&#34;&gt;GitHub Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mega.nz/file/1l9AzS4Q#Q-D9Slf4O52bOtmkjYawedvQR4GxyfRi0hj7svkUHR4&#34;&gt;Download Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-quick-start-guide&#34;&gt;ðŸ“– Quick Start Guide&lt;/h2&gt;
&lt;h3 id=&#34;basic-server-client-communication&#34;&gt;Basic Server-Client Communication&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Launch two instances of Sokit - one as TCP Server (left) and one as TCP Client (right)&lt;/li&gt;
&lt;li&gt;Configure IP addresses and ports for both instances&lt;/li&gt;
&lt;li&gt;Establish the connection between them&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;Server-Client Setup&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/sokit/1.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to hide the Console window when running a Golang compiled file</title>
      <link>http://localhost:1313/posts/how-to-hide-the-console-window-when-running-a-golang-compiled-file./</link>
      <pubDate>Wed, 20 Mar 2024 10:37:55 +0800</pubDate>
      <guid>http://localhost:1313/posts/how-to-hide-the-console-window-when-running-a-golang-compiled-file./</guid>
      <description>&lt;h2 id=&#34;-ninja-ways-to-hide-console-window-in-go&#34;&gt;ðŸŽ¯ Ninja Ways to Hide Console Window in Go&lt;/h2&gt;
&lt;p&gt;Ever wanted to make your Go applications look more professional by hiding that pesky console window? You&amp;rsquo;re in the right place! Let&amp;rsquo;s explore some ninja techniques to achieve this. ðŸ¥·&lt;/p&gt;
&lt;h2 id=&#34;-method-1-the-quick-strike--ldflags&#34;&gt;ðŸš€ Method 1: The Quick Strike (-ldflags)&lt;/h2&gt;
&lt;p&gt;The simplest way to hide the console window is using build flags. Think of it as a stealth mode for your app!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go build -ldflags -H&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;windowsgui main.go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pros:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
